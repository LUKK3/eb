
fn maths(a: I32, b: I32): Bool {
	x := 2 * (3 + a % 4);
	x += 2;
	y := (0x20 & 0d10 | 0o30 ^ 0b101 << 2) - x;
	y += 12;
	return y == x && b == 12;
}

fn something(): Bool {
	return true &&
		true && true || false
}

fn ifs(): Bool {
	x := 5
	if x != 5 {
		return false
	} else {
		x := true
		if !x {
			return false
		} else if something() {
			return true
		}
	}
	false
}

fn main(): I32 {
	if maths(6, 12) && ifs() {
		0;
	} else {
		1;
	}
}

// IMPROVEMENTS
//   anywhere blocks
//   conditional compilation
//   submodules
//   recompile deps if interface changes
// NEXT
//   external c
//   structs
